name: Build to ECR and deploy to EKS

on:
  workflow_dispatch:
#  push:
#    branches: [ main ]

env:
  namespace: dev
  name: starknet-archive

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: echo
      run: echo namespace=$namespace name=$name sha=${{ github.sha }} repository=${{ github.repository }} repository_owner=${{ github.repository_owner }} head_ref=${{ github.head_ref }} base_ref=${{ github.base_ref }} event=${{ github.event }} ref_name=${{ github.ref_name }} ref_type=${{ github.ref_type }} action_ref=${{ github.action_ref }} env=${{ env }} action_ref=${{ github.action_ref }} inputs=${{ inputs }}

#    - name: Check out code
#      uses: actions/checkout@v2
#
#    - name: Configure AWS credentials
#      uses: aws-actions/configure-aws-credentials@v1
#      with:
#        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws-region: eu-central-1
#
#    - name: Login to ECR
#      id: login-ecr
#      uses: aws-actions/amazon-ecr-login@v1
#
#    - name: Build, tag, and push image to ECR
#      id: build
#      env:
#        image: ${{ steps.login-ecr.outputs.registry }}/${{ env.name }}:github-${{ env.namespace }}
#      run: |
#        docker build -t $image .
#        docker push $image
#        echo "::set-output name=image::$image"
#
#    - name: Deploy to EKS
#      uses: tensor-hq/eksctl-helm-action@0.1.0
#      with:
#        eks_cluster: dev-eks-starknet-indexer
#        # plugins: "https://github.com/jkroepke/helm-secrets"
#        command: |-
#          env
#          helm upgrade $name ./helmchart/ --install --create-namespace --namespace $namespace --set typeorm_password=${{ secrets.TYPEORM_PASSWORD }} --set image=${{ steps.build.outputs.image }}
