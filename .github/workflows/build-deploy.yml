name: Build to ECR and deploy to EKS

on:
  workflow_dispatch:
#  push:
#    branches: [ main, stage, prod ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:

    - name: Compute variables
      id: var
      run: |
        if [[ ${{ github.ref_name }} == main ]]; then echo "::set-output name=namespace::dev"; else echo "::set-output name=namespace::${{ github.ref_name }}"; fi
        echo "::set-output name=name::${{ github.event.repository.name }}"
        echo "::set-output name=sha_short::${GITHUB_SHA::7}"

    - name: Check out code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      id: build
      env:
        image: ${{ steps.login-ecr.outputs.registry }}/${{ steps.var.outputs.name }}:${{ steps.var.outputs.namespace }}-${{ steps.var.outputs.sha_short }}
      run: |
        docker build -t $image .
        docker push $image
        echo "::set-output name=image::$image"

    - name: Deploy to EKS
      uses: tensor-hq/eksctl-helm-action@0.1.0
      with:
        eks_cluster: dev-eks-starknet-indexer
        command: helm upgrade ${{ steps.var.outputs.name }}-${{ steps.var.outputs.namespace }} ./helmchart/ --install --namespace ${{ steps.var.outputs.namespace }} --set typeorm_password=${{ secrets.TYPEORM_PASSWORD }} --set typeorm_database=${{ steps.var.outputs.namespace }} --set image=${{ steps.build.outputs.image }} --set name=${{ steps.var.outputs.name }}
